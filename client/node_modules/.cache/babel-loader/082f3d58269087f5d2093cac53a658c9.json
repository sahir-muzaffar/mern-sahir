{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      {\n        return { ...state,\n          posts: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages\n        };\n      }\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/sahirmuzaffar/Desktop/mern/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","START_LOADING","END_LOADING","CREATE","UPDATE","DELETE","LIKE","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,UAAnB,EAA+BC,eAA/B,EAA+CC,aAA/C,EAA6DC,WAA7D,EAA0EC,MAA1E,EAAkFC,MAAlF,EAA0FC,MAA1F,EAAkGC,IAAlG,QAA8G,0BAA9G;AAEA,gBAAe,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAE,IAAZ;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAAP,EAAqCC,MAArC,KAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKV,aAAL;AACC,aAAO,EAAC,GAAGM,KAAJ;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAED,SAAKN,WAAL;AACE,aAAO,EAAC,GAAGK,KAAJ;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEF,SAAKV,SAAL;AACE;AACE,eAAO,EACL,GAAGS,KADE;AAELE,UAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;AAGLC,UAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,UAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,SAAP;AAMD;;AAGH,SAAKf,eAAL;AAEE,aAAO,EAAC,GAAGO,KAAJ;AAAWE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAAzB,OAAP;;AAEA,SAAKb,UAAL;AAEA,aAAO,EAAC,GAAGQ,KAAJ;AAAWS,QAAAA,IAAI,EAAEN,MAAM,CAACE;AAAxB,OAAP;;AAEF,SAAKN,IAAL;AAEE,aAAO,EAAC,GAAGC,KAAJ;AAAWE,QAAAA,KAAK,EAACF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;AAAjB,OAAP;;AACF,SAAKb,MAAL;AAEE,aAAO,EAAC,GAAGI,KAAJ;AAAWE,QAAAA,KAAK,EAAC,CAAC,GAAGF,KAAJ,EAAWG,MAAM,CAACE,OAAlB;AAAjB,OAAP;;AAEF,SAAKR,MAAL;AAEE,aAAO,EAAC,GAAGG,KAAJ;AAAWE,QAAAA,KAAK,EAACF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;AAAjB,OAAP;;AACF,SAAKX,MAAL;AAEE,aAAO,EAAC,GAAGE,KAAJ;AAAWE,QAAAA,KAAK,EAACF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAAjB,OAAP;;AACF;AACE,aAAOL,KAAP;AAzCJ;AA2CD,CA5CD","sourcesContent":["import { FETCH_ALL,FETCH_POST, FETCH_BY_SEARCH,START_LOADING,END_LOADING ,CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (state={isLoading: true, posts: []} ,action) => {\n  switch (action.type) {\n\n    case START_LOADING:\n     return {...state , isLoading: true};\n\n    case END_LOADING:\n      return {...state , isLoading: false};\n\n    case FETCH_ALL:\n      {\n        return {\n          ...state,\n          posts: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages,\n        }\n      }\n      \n\n    case FETCH_BY_SEARCH:\n\n      return {...state, posts: action.payload};\n\n      case FETCH_POST:\n\n      return {...state, post: action.payload};\n\n    case LIKE:\n\n      return {...state, posts:state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case CREATE:\n\n      return {...state, posts:[...state, action.payload]};\n\n    case UPDATE:\n\n      return {...state, posts:state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case DELETE:\n\n      return {...state, posts:state.posts.filter((post) => post._id !== action.payload)};\n    default:\n      return state;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}
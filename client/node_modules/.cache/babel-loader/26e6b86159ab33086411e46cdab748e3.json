{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      {\n        return { ...state,\n          posts: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages\n        };\n      }\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id === action.payload._id) return action.payload;\n          return post;\n        })\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/sahirmuzaffar/Desktop/mern/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","START_LOADING","END_LOADING","CREATE","UPDATE","DELETE","LIKE","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,eAAhC,EAAiDC,aAAjD,EAAgEC,WAAhE,EAA6EC,MAA7E,EAAqFC,MAArF,EAA6FC,MAA7F,EAAqGC,IAArG,EAA2GC,OAA3G,QAA0H,0BAA1H;AAEA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKX,aAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEF,SAAKP,WAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEF,SAAKX,SAAL;AACE;AACE,eAAO,EACL,GAAGU,KADE;AAELE,UAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;AAGLC,UAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,UAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,SAAP;AAMD;;AAGH,SAAKhB,eAAL;AAEE,aAAO,EAAE,GAAGQ,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1B,OAAP;;AAEF,SAAKd,UAAL;AAEE,aAAO,EAAE,GAAGS,KAAL;AAAYS,QAAAA,IAAI,EAAEN,MAAM,CAACE;AAAzB,OAAP;;AAEF,SAAKP,IAAL;AAEE,aAAO,EAAE,GAAGE,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;AAAnB,OAAP;;AAEF,SAAKV,OAAL;AAEE,aAAO,EACL,GAAGC,KADE;AAELE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAU;AAC/B,cAAIA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAAhC,EAAqC,OAAOR,MAAM,CAACE,OAAd;AACrC,iBAAOI,IAAP;AAED,SAJM;AAFF,OAAP;;AASF,SAAKd,MAAL;AAEE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAJ,EAAWG,MAAM,CAACE,OAAlB;AAAnB,OAAP;;AAEF,SAAKT,MAAL;AAEE,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;AAAnB,OAAP;;AACF,SAAKZ,MAAL;AAEE,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAAnB,OAAP;;AACF;AACE,aAAOL,KAAP;AArDJ;AAuDD,CAxDD","sourcesContent":["import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n\n    case START_LOADING:\n      return { ...state, isLoading: true };\n\n    case END_LOADING:\n      return { ...state, isLoading: false };\n\n    case FETCH_ALL:\n      {\n        return {\n          ...state,\n          posts: action.payload.data,\n          currentPage: action.payload.currentPage,\n          numberOfPages: action.payload.numberOfPages,\n        }\n      }\n\n\n    case FETCH_BY_SEARCH:\n\n      return { ...state, posts: action.payload };\n\n    case FETCH_POST:\n\n      return { ...state, post: action.payload };\n\n    case LIKE:\n\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n\n    case COMMENT:\n\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post._id === action.payload._id) return action.payload;\n          return post;\n\n        })\n      }\n\n    case CREATE:\n\n      return { ...state, posts: [...state, action.payload] };\n\n    case UPDATE:\n\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}
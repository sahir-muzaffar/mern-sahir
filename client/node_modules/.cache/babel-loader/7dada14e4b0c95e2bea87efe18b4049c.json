{"ast":null,"code":"var _jsxFileName = \"/Users/sahirmuzaffar/Desktop/mern/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Typography, Avatar, Button, Paper, Grid, Container } from \"@material-ui/core\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { useHistory } from \"react-router-dom\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport jwt_decode from \"jwt-decode\";\nimport useStyles from \"./style\";\nimport Input from './Input';\nimport { useDispatch } from 'react-redux';\nimport { signin, signup } from \"../../actions/auth\";\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUP, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignUP) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignup(previsSignUp => !previsSignUp);\n    setShowPassword(false);\n  };\n\n  const createOrGetUser = async response => {\n    const result = jwt_decode(response.credential);\n    const {\n      name,\n      sub,\n      picture\n    } = result;\n    const token = result.sub;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, isSignUP ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: e => {\n      handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, isSignUP && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First name\",\n    handleChange: e => {\n      handleChange(e);\n    },\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last name\",\n    handleChange: e => {\n      handleChange(e);\n    },\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email address\",\n    handleChange: e => {\n      handleChange(e);\n    },\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"password\",\n    handleChange: e => {\n      handleChange(e);\n    },\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), isSignUP && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: e => {\n      handleChange(e);\n    },\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(GoogleLogin, {\n    onSuccess: response => {\n      createOrGetUser(response);\n    },\n    onError: () => {\n      console.log(\"error\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.submit,\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, isSignUP ? \"SignUp\" : \"SignIn\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, isSignUP ? \"Already have an account?Sign In\" : \"Don't have an account?Sign Up\"))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/sahirmuzaffar/Desktop/mern/client/src/components/Auth/Auth.js"],"names":["React","useState","Typography","Avatar","Button","Paper","Grid","Container","GoogleLogin","useHistory","LockOutlinedIcon","jwt_decode","useStyles","Input","useDispatch","signin","signup","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignUP","setIsSignup","formData","setFormData","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","previsSignUp","createOrGetUser","response","result","credential","sub","picture","token","type","data","push","error","console","log","paper","avatar","form","submit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Typography, Avatar, Button, Paper, Grid, Container } from \"@material-ui/core\";\nimport { GoogleLogin} from \"@react-oauth/google\";\nimport { useHistory } from \"react-router-dom\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\nimport jwt_decode from \"jwt-decode\"\nimport useStyles from \"./style\";\nimport Input from './Input';\nimport { useDispatch } from 'react-redux';\nimport { signin, signup } from \"../../actions/auth\"\n\nconst initialState = { firstName: \"\", lastName: \"\", email: \"\", password: \"\", confirmPassword: \"\" };\nconst Auth = () => {\n    const classes = useStyles();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignUP, setIsSignup] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const handleShowPassword = () => {\n        setShowPassword((prevShowPassword) => !prevShowPassword)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (isSignUP) {\n            dispatch(signup(formData, history));\n        }\n        else {\n            dispatch(signin(formData, history));\n        }\n\n    }\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    }\n    const switchMode = () => {\n        setIsSignup((previsSignUp) => !previsSignUp)\n        setShowPassword(false)\n\n    }\n\n\n    const createOrGetUser = async (response) => {\n        const result = jwt_decode(response.credential);\n\n        const { name, sub, picture } = result;\n        \n\n        const token = result.sub;\n\n\n        try {\n            dispatch({ type: 'AUTH', data: { result, token } });\n            history.push('/');\n\n        } catch (error) {\n            console.log(error);\n\n        }\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3} >\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant=\"h5\">{isSignUP ? 'Sign Up' : 'Sign In'}</Typography>\n                <form className={classes.form} onSubmit={(e) => { handleSubmit(e) }}>\n                    <Grid container spacing={2}>\n                        {\n                            isSignUP && (\n                                <>\n                                    <Input name=\"firstName\" label=\"First name\" handleChange={(e) => { handleChange(e) }} autoFocus half />\n                                    <Input name=\"lastName\" label=\"Last name\" handleChange={(e) => { handleChange(e) }} half />\n                                </>\n                            )\n                        }\n                        <Input name=\"email\" label=\"Email address\" handleChange={(e) => { handleChange(e) }} type=\"email\" />\n                        <Input name=\"password\" label=\"password\" handleChange={(e) => { handleChange(e) }} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                        {isSignUP && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={(e) => { handleChange(e) }} type=\"password\" />}\n                    </Grid>\n                    <GoogleLogin onSuccess={(response) => {\n\n\n                        createOrGetUser(response)\n                    }} onError={() => {\n                        console.log(\"error\");\n                    }} />\n                    <Button type=\"submit\" className={classes.submit} fullWidth variant='contained' color=\"primary\">\n                        {isSignUP ? \"SignUp\" : \"SignIn\"}\n                    </Button>\n\n                    <Grid container justify='flex-end'>\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                {isSignUP ? \"Already have an account?Sign In\" : \"Don't have an account?Sign Up\"}\n                            </Button>\n\n\n                        </Grid>\n\n                    </Grid>\n\n\n                </form>\n\n            </Paper>\n\n        </Container>\n    )\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}
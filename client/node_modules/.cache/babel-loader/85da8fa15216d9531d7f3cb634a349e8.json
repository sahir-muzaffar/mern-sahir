{"ast":null,"code":"var _jsxFileName = \"/Users/sahirmuzaffar/Desktop/mern/client/src/components/PostDetails/CommentsSection.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport useStyles from \"./styles\";\nimport { commentPost } from \"../../actions/posts\";\n\nconst CommentSection = ({\n  post\n}) => {\n  var _user$result;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const commentsRef = useRef();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState('');\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const handleClick = async () => {\n    const finalComment = `${user.result.name}:${comment}`;\n    const newComment = await dispatch(commentPost(finalComment, post._id));\n    setComments(newComment);\n    setComment('');\n    commentsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Comments\"), comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }, \"  \", c.split(':')[0], \" \"), c.split(':')[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    rows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Comment\"))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["/Users/sahirmuzaffar/Desktop/mern/client/src/components/PostDetails/CommentsSection.jsx"],"names":["React","useState","useEffect","useRef","Typography","TextField","Button","useDispatch","useStyles","commentPost","CommentSection","post","classes","dispatch","commentsRef","comments","setComments","comment","setComment","user","JSON","parse","localStorage","getItem","handleClick","finalComment","result","name","newComment","_id","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Typography, TextField, Button } from \"@material-ui/core\"\nimport { useDispatch } from \"react-redux\"\n\n\nimport useStyles from \"./styles\"\nimport {commentPost} from \"../../actions/posts\"\n\nconst CommentSection = ({ post }) => {\n    \n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const commentsRef = useRef();\n    const [comments, setComments] = useState(post?.comments);\n    const [comment, setComment] = useState('');\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    \n    \n\n    \n\n\n    const handleClick = async() => {\n\n        const finalComment = `${user.result.name}:${comment}`;\n        const newComment = await dispatch(commentPost(finalComment,post._id));\n        setComments(newComment);\n        setComment('');\n        commentsRef.current.scrollIntoView({behavior: 'smooth'})\n\n\n    }\n\n\n    return (\n        <div>\n            <div className={classes.commentsOuterContainer}>\n                <div className={classes.commentsInnerContainer}>\n                    <Typography gutterBottom variant='h6'>Comments</Typography>\n                    {comments.map((c, i) => (\n                        <Typography key={i} gutterBottom variant='subtitle1'>\n                          <strong>  {c.split(':')[0]} </strong>\n                            {c.split(':')[1]}\n                        </Typography>\n                    ))}\n                    <div ref={commentsRef}/> \n                </div>\n\n                {user?.result?.name && (\n\n                \n                <div style={{ width: \"70%\" }}>\n                    <Typography gutterBottom variant='h6'>Write a comment</Typography>\n                    <TextField\n                        fullWidth\n                        rows={4}\n                        variant=\"outlined\"\n                        label=\"Comment\"\n                        multiline\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)} />\n\n                    <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment} variant=\"contained\" color=\"primary\" onClick={handleClick} >\n                        Comment\n                    </Button>\n\n                </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}